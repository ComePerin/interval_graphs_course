@misc{on_chordal,
   abstract = {We derive a formula for the chromatic polynomial of a chordal or a triangulated graph in terms of its maximal cliques. As a corollary we obtain a way to write down an explicit formula for the chromatic polynomial for an arbitrary power of a graph which belongs to any given class of chordal graphs that are closed under taking powers.},
   author = {Geir Agnarsson},
   journal = {MATH. SCAND},
   pages = {240-246},
   title = {ON CHORDAL GRAPHS AND THEIR CHROMATIC POLYNOMIALS},
   volume = {93},
   year = {2003},
}
@misc{rose,
   abstract = {A triangulated graph is a graph in which for every cycle of length L > 3, there is an edge joining two nonconsecutive vertices. In this paper we study triangulated graphs and show that they play an important role in the elimination process. The results have application in the study of the numerical solution of sparse positive definite systems of linear equations by Gaussian elimination.},
   author = {Donald J Rose},
   journal = {JOURNAL OF MATHEMATICAL ANALYSIS AND APPLICATIONS},
   pages = {597-609},
   title = {Triangulated Graphs and the Elimination Process},
   volume = {32},
   year = {1970},
}
@article{ramenazi,
   abstract = {The chromatic number of signed graphs is defined recently. The coloring and clique problem of interval graphs has been studied and polynomial time algorithms are established. Here we consider these problems for signed interval graphs and prove that the coloring problem of signed interval graphs is NP-complete whereas their ordinary clique problem is in P. We also study the complexity of further related problems.},
   author = {F. Ramezani},
   month = {12},
   title = {Coloring problem of signed interval graphs},
   url = {http://arxiv.org/abs/1612.03280},
   year = {2016},
}
@misc{shier,
   abstract = {This paper studies properties of perfect elimination orderings in chordal graphs. Specific connections to convex subsets and quasiconcave functions in a graph are discussed. Several new schemes for generating all perfect elimination orderings are investigated and related to existing schemes.},
   author = {D R Shier},
   title = {SOME ASPECTS OF PERFECT ELIMINATION CHORDAL GRAPHS ORDERINGS IN},
}
@misc{mario,
   author = {Mario Carneiro},
   title = {Maximum Cardinality Search and Chordal Graphs},
   year = {2018},
}
@misc{chang,
   abstract = {This paper first presents a unified approach to design efficient algorithms for the weighted domination problem and its three variants, i.e., the weighted independent, connected, and total domination problems, on interval graphs. Given an interval model with endpoints sorted, these algorithms run in time O(n) or O(n log log n) where n is the number of vertices. The results are then extended to solve the same problems on circular-arc graphs in O(n + m) time where m is the number of edges of the input graph. 1. Introduction. Let G = (V, E) be an undirected graph. Throughout the paper, n and m denote the numbers of vertices and edges of a graph, respectively. For a vertex v ∈ V , let N (v) = \{u : u ∈ V , u = v and u is a neighbor of v\} and N [v] = N (v) ∪ \{v\}. In general, for S ⊆ V , N (S) and N [S] denote ∪ v∈S N (v) and N (S)∪S, respectively. A subset S of V dominates another subset T of V if T ⊆ N [S]. A dominating set S of a subset T of V is called an independent, connected, and total dominating set of T if the induced subgraph of S has no edges, is connected, and has no isolated vertices, respectively. A subset S of V is called an (independent, connected, total) dominating set of graph G if S is an (independent, connected, total) dominating set of V. Let each vertex of graph G be associated with a real weight. The weight of a set of vertices is the sum of the weights of all vertices in the set. For a vertex v and a set S of vertices, w(v) and w(S) denote the weights of v and S, respectively. The weighted domination problem involves finding a dominating set of minimum weight for a weighted graph. The weighted independent (connected, total) domination problem involves finding an independent (connected, total) dominating set of minimum weight for a weighted graph. Given a graph G and an integer K, the problem of determining whether G has a dominating set whose cardinality is less than K is NP-complete [17]. The same holds true for independent, connected, and total domination [17], [27]. A graph G = (V, E) is called an intersection graph for a finite family F of a nonempty set if there is a one-to-one correspondence between F and V such that two sets in F have nonempty intersection if and only if their corresponding vertices in V are adjacent to each other. We call F an intersection model of G. For an intersection model F, we use G(F) to denote the intersection graph for F. If F is a family of intervals on a real line, then G is called an interval graph for F and F is called an interval model of G. If F is a family of arcs on a circle, then G is called a circular-arc graph for F and F is called a circular-arc model of G.},
   author = {Maw-shang Chang and Siam J Comput},
   issue = {6},
   journal = {and Applied Mathematics},
   keywords = {68Q20,68Q25,68R10,90C27,circular-arc graphs,domination,graph algorithms AMS subject classifications 05C85,interval graphs},
   pages = {1671-1694},
   title = {EFFICIENT ALGORITHMS FOR THE DOMINATION PROBLEMS ON INTERVAL AND CIRCULAR-ARC GRAPHS *},
   volume = {27},
   url = {http://www.siam.org/journals/sicomp/27-6/23843.html},
   year = {1998},
}
@article{adhikary,
   abstract = {We resolve the longstanding open problem concerning the computational complexity of Max Cut on interval graphs by showing that it is NP-complete.},
   author = {Ranendu Adhikary and Kaustav Bose and Satwik Mukherjee and Bodhayan Roy},
   month = {5},
   title = {Complexity of Maximum Cut on Interval Graphs},
   url = {http://arxiv.org/abs/2006.00061},
   year = {2020},
}
@misc{kolen,
   abstract = {In interval scheduling, not only the processing times of the jobs but also their starting times are given. This article surveys die area of interval scheduling and presents proofs of results that have been known within the community for some time. We first review the complexity and approximability of different variants of interval scheduling problems. Next, we motivate the relevance of interval scheduling problems by providing an overview of applications that have appeared in literature. Finally, we focus on algorithmic results for two important variants of interval scheduling problems. In one variant we deal with nonidentical machines: instead of each machine being continuously available, there is a given interval for each machine in which it is available. In another variant, the machines are continuously available but they are ordered, and each job has a given "maximal" machine on which it can be processed. We investigate the complexity of these problems and describe algorithms for their solution. © 2007 Wiley Periodicals, Inc.},
   author = {Antoon W.J. Kolen and Jan Karel Lenstra and Christos H. Papadimitriou and Frits C.R. Spieksma},
   doi = {10.1002/nav.20231},
   issn = {0894069X},
   issue = {5},
   journal = {Naval Research Logistics},
   keywords = {Analysis of algorithms,Computational complexity: Exact algorithms,Deterministic: Interval scheduling,Production/scheduling,Sequencing},
   month = {8},
   pages = {530-543},
   title = {Interval scheduling: A survey},
   volume = {54},
   year = {2007},
}
@misc{booth,
   abstract = {A matrix of zeroes and ones is said to have the consecutive ones property if there is a permutation of its rows such that the ones in each column appear consecutively. This paper develops a data structure which may be used to test a matrix for the consecutive ones property, and produce the desired permutation of the rows, in linear time. One application of the consecutive ones property is in recognizing interval graphs. A graph is an interval graph if there exists a i-i correspondence between its vertices and a set of intervals on the real line such that two vertices are adjacent if and only if the corresponding intervals have a nonempty intersection. Fulkerson and Gross have characterized interval graphs as those for which the clique versus vertex incidence matrix has the consecutive ones property. In testing this particular matrix for the consecutive ones property we may process the columns in a special order to simDlifv %. the algorithm. This yields the interval graph recognition algorithm which is presented in section 2; section 3 indicates how this algorithm may be extended to the general consecutive ones problem° A final section of the paper gives a number of further applications of the ideas developed in the earlier sections. These applications include linear algorithms to a) recognize unit interval graphs, b) test for the circular ones property, c) recognize planar graphs, d) count the number of distinct models of an interval graph (assuming that an arithmetic operation can be done in constant time), and e) determine whether two interval graphs are isomorphic. i. Introduction.},
   author = {Kellogg S Booth and George S Lueker},
   title = {Linear Algorithms to Recognize Interval Graphs and Test for the Consecutive Ones Property},
}
@inbook{karp,
   abstract = {A large class of computational problems involve the determination of properties of graphs, digraphs, integers, arrays of integers, finite families of finite sets, boolean formulas and elements of other countable domains. Through simple encodings from such domains into the set of words over a finite alphabet these problems can be converted into language recognition problems, and we can inquire into their computational complexity. It is reasonable to consider such a problem satisfactorily solved when an algorithm for its solution is found which terminates within a number of steps bounded by a polynomial in the length of the input. We show that a large number of classic unsolved problems of covering, matching, packing, routing, assignment and sequencing are equivalent, in the sense that either each of them possesses a polynomial-bounded algorithm or none of them does.},
   author = {Richard M. Karp},
   doi = {10.1007/978-1-4684-2001-2_9},
   journal = {Complexity of Computer Computations},
   title = {Reducibility among Combinatorial Problems},
   year = {1972},
}
@misc{Kortet1989,
   abstract = {The fastest-known algorithm for recognizing interval graphs [S. Booth and S. Lucker, J. Comput. System Sci., 13 (1976), pp. 335-379] iteratively manipulates the system of all maximal cliques of the given graph in a rather complicated way in order to construct a consecutive arrangement (more precisely, a tree representation of all possible consecutive arrangements). This paper presents a much simpler algorithm using a related, but much more informative tree representation of interval graphs. This tree is constructed in an incremental fashion by adding vertices to the graph in a predefined order such that adding a vertex u takes O([Adj (u)l + 1) amortized time.},
   author = {Norbert Kortet and Rolf H Mohring},
   issue = {1},
   keywords = {68E10,amortized time AMS(MOS) subject classifications 68C25,graph algorithm,incremental recognition,interval graphs,modified PQ-tree,perfect elimination scheme},
   pages = {68-81},
   title = {AN INCREMENTAL LINEAR-TIME ALGORITHM FOR RECOGNIZING INTERVAL GRAPHS*},
   volume = {18},
   url = {http://www.siam.org/journals/ojsa.php},
   year = {1989},
}
@misc{isomorphism,
   author = {George S Lueker and Kellogg S Booth},
   issue = {2},
   journal = {Jourllal of the Assoctat,on for Computmg Maclmlery},
   pages = {183-195},
   title = {A Linear Time Algorithm for Deciding Interval Graph Isomorphism},
   volume = {26},
   year = {1979},
}
@book{golumbic,
   abstract = {Algorithmic Graph Theory and Perfect Graphs, first published in 1980, has
      become the classic introduction to the field. This new Annals edition
      continues to convey the message that intersection graph models are a
      necessary and important tool for solving real-world problems. It remains a
      stepping stone from which the reader may embark on one of many fascinating
      research trails. The past twenty years have been an amazingly fruitful
      period of research in algorithmic graph theory and structured families of
      graphs. Especially important have been the theory and applications of new
      intersection graph models such as generalizations of permutation graphs
      and interval graphs. These have lead to new families of perfect graphs and
      many algorithmic results. These are surveyed in the new Epilogue chapter
      in this second edition.},
   author = {Martin Charles Golumbic},
   journal = {Annals of discrete mathematics},
   title = {Algorithmic Graph Theory and Perfect Graphs (Volume 57) (Annals of
      Discrete Mathematics (Volume 57))},
   year = {2004},
}
@article{boland,
   author = {Lekkerkerker and Boland},
   title = {Representation of a finite graph by a set of intervals on the real line},
   year = {1962},
}

@misc{graphclasses,
  author       = {Graph Classes},
  title        = {GC 234 - Chordal Graphs},
  year         = {2024},
  url          = {https://www.graphclasses.org/classes/gc_234.html},
  note         = {Accessed: 2024-12-22}
}

@misc{erdos,
   author = {Erdos and Goodman and Posa},
   title = {THE REPRESENTATION OF A GRAPH BY SET INTERSECTIONS},
}

@misc{Chudnovsky2003,
   abstract = {A graph is perfect if for every induced subgraph, the chromatic number is equal to the maximum size of a complete subgraph. The class of perfect graphs is important for several reasons. For instance, many problems of interest in practice but intractable in general can be solved efficiently when restricted to the class of perfect graphs. Also, the question of when a certain class of linear programs always have an integer solution can be answered in terms of perfection of an associated graph. In the first part of the paper we survey the main aspects of perfect graphs and their relevance. In the second part we outline our recent proof of the Strong Perfect Graph Conjecture of Berge from 1961, the following: a graph is perfect if and only if it has no induced subgraph isomorphic to an odd cycle of length at least five, or the complement of such an odd cycle.},
   author = {Maria Chudnovsky and Neil Robertson and P D Seymour and Robin Thomas},
   journal = {Mathematical Programming Ser. B},
   keywords = {Berge graph,perfect graph,skew partition},
   pages = {405-422},
   title = {Progress on Perfect Graphs},
   volume = {97},
   year = {2003},
}

@misc{wiki_interval,
  author       = {Wikipedia contributors},
  title        = {Interval graph --- Wikipedia{,} The Free Encyclopedia},
  year         = {2024},
  url          = {https://en.wikipedia.org/wiki/Interval_graph},
  note         = {Accessed: 2024-12-22}
}
